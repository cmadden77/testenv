{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "exchangeStorageSizeInGB": {
      "type": "int",
      "defaultValue": 10,
      "metadata": {
        "description": "Exchange Mailbox storage size in GB."
      }
    },
    "adSubnetName": {
      "type": "string",
      "defaultValue": "adSubnet"
    },
    "exchangeVMName": {
      "type": "string",
      "defaultValue": "TAZEXCH01"
    },
    "exchangeIP": {
      "type": "string",
      "metadata": { "description": "The IP Addresses assigned to the domain controllers (a, b). Remember the first IP in a subnet is .4 e.g. 10.0.0.0/16 reserves 10.0.0.0-3. Specify one IP per server - must match numberofVMInstances or deployment will fail.s" },
      "defaultValue": "10.0.1.6"
    },
    "adDomainName": {
      "type": "string",
      "defaultValue": "contoso.com"
    },
    "adminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "Admin password"
      }
    },
    "adminUsername": {
      "type": "string",
      "metadata": {
        "description": "Admin username"
      }
    },
    "deploymentNumber": {
      "type": "string",
      "defaultValue": "1",
      "metadata": {
        "description": "When deploying the stack N times, define the instance - this will be appended to some resource names to avoid collisions."
      }
    },
    "assetLocation": {
      "type": "string"
    },
    "dmzSubnetName": {
      "type": "string",
      "defaultValue": "adSubnet"
    },
    "location": {
      "type": "string",
      "metadata": {
        "Description": "The region to deploy the resources into"
      }
    },
    "NetworkInterfaceName": {
      "type": "string",
      "defaultValue": "NIC",
      "metadata": {
        "description": "This is the prefix name of the Network interfaces"
      }
    },
    "publicIPAddressDNSName": {
      "type": "string"
    },
    "virtualNetworkName": {
      "type": "string",
      "defaultValue": "vnet"
    },
    "vmSize": {
      "type": "string",
      "defaultValue": "Standard_D1_v2",
      "metadata": {
        "description": "This is the allowed list of VM sizes"
      }
    },
    "ExchangeFarmCount": {
      "type": "string",
      "defaultValue": "1",
      "allowedValues": [ "1", "2", "3", "4", "5" ],
      "metadata": { "description": "An exchange will be setup independently this number of times. NOTE: it's unlikely to ever need more than one - additional farm counts are for edge case testing." }
    }
  },
  "variables": {
    "exchangeVMCount": 1,
    "imagePublisher": "MicrosoftWindowsServer",
    "imageOffer": "WindowsServer",
    "storageAccountType": "Standard_LRS",
    "publicIPAddressName": "[tolower(concat('ip', resourceGroup().name))]",
    "publicIPAddressType": "Dynamic",
    "subnetName": "[tolower(concat('sn', resourceGroup().name))]",
    "exchangeDomainName": "[tolower(concat(resourceGroup().name, '.com'))]",
    "uniqueDnsNameForPublicIP": "[tolower(concat('dns', resourceGroup().name))]",
    "uniqueStorageAccountName": "[tolower(concat('sa', resourceGroup().name))]",
    "uniqueStorageAccountContainerName": "[tolower(concat('sc', resourceGroup().name))]",
    "location": "[resourceGroup().location]",
    "vmOsSku": "2016-Datacenter",
    "vmAdminUsername": "vmadministrator",
    "vmAdminPassword": "[subscription().subscriptionId]",
    "vmName": "[concat('vm', resourceGroup().name)]",
    "vmOsDiskName": "[concat('od', resourceGroup().name)]",
    "vmDataDiskName": "[concat('dd', resourceGroup().name)]",
    "vmSize": "Standard_D3",
    "vmDataDiskSize": "15",
    "domainJoinOptions": "3",
    "vmNicName": "[tolower(concat('nc', resourceGroup().name))]",
    "virtualNetworkName": "[tolower(concat('vn', resourceGroup().name))]",
    "adSubnetID": "[concat(variables('vnetID'),'/subnets/',parameters('adSubnetName'))]",
    "vnetID": "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworkName'))]",
    "apiVersion": "2015-06-15",
    "modulesPath": "https://raw.githubusercontent.com/Azure/AzureStack-QuickStart-Templates/master/exchange-2016-non-ha/",
    "modulesExchange": "ExchangeWorkload.zip",
    "modulesUrlExchange": "[concat(variables('modulesPath'),variables('modulesExchange'))]",
    "modulesExchangeData": "ExchangeWorkload.psd1",
    "modulesUrlExchangeData": "[concat(variables('modulesPath'),variables('modulesExchangeData'))]",
    "configurationFunctionExchange": "ExchangeWorkload.ps1\\InstallAndConfigureExchange",
    "nsgName": "[tolower(concat('ng', resourceGroup().name))]",
    "nsgID": "[resourceId('Microsoft.Network/networkSecurityGroups',variables('nsgName'))]",
    "exchangeInstallerPath": "InstallerExchange",
    "exchangeISOUri": "https://download.microsoft.com/download/1/F/7/1F777B44-32CB-4F3D-B486-3D0F566D79A9/ExchangeServer2016-x64-cu8.iso",
    "modulesExchangeISODownload": "CSDownloadISO.ps1",
    "modulesUrlExchangeISODownload": "[concat(variables('modulesPath'),variables('modulesExchangeISODownload'))]"
  },
  "resources": [
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[tolower(variables('uniqueStorageAccountName'))]",
      "location": "[variables('location')]",
      "properties": {
        "accountType": "[variables('storageAccountType')]"
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[concat(variables('vmNicName'),copyIndex())]",
      "location": "[variables('location')]",
      "copy": {
        "name": "nicLoop",
        "count": "[variables('exchangeVMCount')]"
      },
      "dependsOn": [],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfigpublic",
            "properties": {
              "subnet": {
                "id": "[variables('adSubnetID')]"
              }
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[concat(variables('vmName'),copyIndex())]",
      "location": "[variables('location')]",
      "copy": {
        "name": "vmLoop",
        "count": "[variables('exchangeVMCount')]"
      },
      "dependsOn": [
        "[concat('Microsoft.Storage/storageAccounts/',variables('uniqueStorageAccountName'))]",
        "[concat('Microsoft.Network/networkInterfaces/',variables('vmNicName'),copyIndex())]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "[variables('vmSize')]"
        },
        "osProfile": {
          "computerName": "[variables('vmName')]",
          "adminUsername": "[variables('vmAdminUsername')]",
          "adminPassword": "[variables('vmAdminPassword')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[variables('imagePublisher')]",
            "offer": "[variables('imageOffer')]",
            "sku": "[variables('vmOsSku')]",
            "version": "latest"
          },
          "osDisk": {
            "name": "osdisk",
            "vhd": {
              "uri": "[concat(reference(concat('Microsoft.Storage/storageAccounts/', variables('uniqueStorageAccountName')),providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).primaryEndpoints.blob,variables('uniqueStorageAccountContainerName'),'/',variables('vmOsDiskName'),copyIndex(),'.vhd')]"
            },
            "caching": "ReadWrite",
            "createOption": "FromImage"
          },
          "dataDisks": [
            {
              "vhd": {
                "uri": "[concat(reference(concat('Microsoft.Storage/storageAccounts/', variables('uniqueStorageAccountName')),providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).primaryEndpoints.blob,variables('uniqueStorageAccountContainerName'),'/',variables('vmDataDiskName'),copyIndex(),'-0','.vhd')]"
              },
              "name": "[concat(variables('vmDataDiskName'),copyIndex(),'-0')]",
              "createOption": "Empty",
              "caching": "None",
              "diskSizeGB": "[variables('vmDataDiskSize')]",
              "lun": 0
            },
            {
              "vhd": {
                "uri": "[concat(reference(concat('Microsoft.Storage/storageAccounts/', variables('uniqueStorageAccountName')),providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).primaryEndpoints.blob,variables('uniqueStorageAccountContainerName'),'/',variables('vmDataDiskName'),copyIndex(),'-1','.vhd')]"
              },
              "name": "[concat(variables('vmDataDiskName'),copyIndex(),'-1')]",
              "createOption": "Empty",
              "caching": "None",
              "diskSizeGB": "[variables('vmDataDiskSize')]",
              "lun": 1
            }
          ]
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',concat(variables('vmNicName'),copyIndex()))]"
            }
          ]
        }
      }
    },
    {
      "apiVersion": "[variables('apiVersion')]",
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "name": "[concat(parameters('exchangeVMName'), copyIndex(1), '/joindomain')]",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[concat('Microsoft.Compute/virtualMachines/',variables('vmName'),copyIndex())]"
      ],
      "tags": {
        "displayName": "ExchangeVMJoin",
        "isClient": "true"
      },
      "copy": {
        "name": "joinCopy",
        "count": "[variables('exchangeVMCount')]"
      },
      "properties": {
        "publisher": "Microsoft.Compute",
        "type": "JsonADDomainExtension",
        "typeHandlerVersion": "1.3",
        "autoUpgradeMinorVersion": true,
        "settings": {
          "Name": "[parameters('adDomainName')]",
          "OUPath": "",
          "User": "[concat(variables('shortDomainName'), '\\', parameters('adminUsername'))]",
          "Restart": "true",
          "Options": "[variables('domainJoinOptions')]"
        },
        "protectedsettings": {
          "Password": "[parameters('adminPassword')]"
        }
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "name": "[concat(variables('vmName'),copyIndex(),'/CustomScriptExtension')]",
      "location": "[variables('location')]",
      "tags": {
        "displayName": "ExchangeVMCustomScript",
        "isClient": "true"
      },
      "copy": {
        "name": "customExtensionLoop",
        "count": "[variables('exchangeVMCount')]"
      },
      "dependsOn": [
        "[concat('Microsoft.Compute/virtualMachines/',variables('vmName'),copyIndex())]",
        "[concat('Microsoft.Compute/virtualMachines/',parameters('exchangeVMName'), copyIndex(1), '/joindomain')]"
      ],
      "properties": {
        "publisher": "Microsoft.Compute",
        "type": "CustomScriptExtension",
        "typeHandlerVersion": "1.4",
        "autoUpgradeMinorVersion": true,
        "settings": {
          "fileUris": [
            "[variables('modulesUrlExchangeISODownload')]"
          ],
          "commandToExecute": "[concat('powershell -ExecutionPolicy Unrestricted -file ',variables('modulesExchangeISODownload'),' -uri ',variables('exchangeISOUri'),' -destination ',variables('exchangeInstallerPath'))]"
        }
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "name": "[concat(variables('vmName'),copyIndex(),'/dscExtension')]",
      "location": "[variables('location')]",
      "tags": {
        "displayName": "ExchangeVMDSC",
        "isClient": "true"
      },
      "copy": {
        "name": "extensionLoop",
        "count": "[variables('exchangeVMCount')]"
      },
      "dependsOn": [
        "[concat('Microsoft.Compute/virtualMachines/',variables('vmName'),copyIndex())]",
        "[concat('Microsoft.Compute/virtualMachines/',variables('vmName'),copyIndex(),'/extensions/','CustomScriptExtension')]"
      ],
      "properties": {
        "publisher": "Microsoft.Powershell",
        "type": "DSC",
        "typeHandlerVersion": "2.15",
        "autoUpgradeMinorVersion": true,
        "settings": {
          "modulesUrl": "[variables('modulesUrlExchange')]",
          "configurationFunction": "[variables('configurationFunctionExchange')]",
          "properties": {
            "DomainName": "[variables('exchangeDomainName')]",
            "StorageSize": "[parameters('exchangeStorageSizeInGB')]",
            "VMAdminCreds": {
              "userName": "[variables('vmAdminUsername')]",
              "password": "PrivateSettingsRef:vmAdminPassword"
            },
            "Location": "[variables('location')]"
          }
        },
        "protectedSettings": {
          "items": {
            "vmAdminPassword": "[variables('vmAdminPassword')]"
          },
          "DataBlobUri": "[variables('modulesUrlExchangeData')]"
        }
      }
    }
  ]
}